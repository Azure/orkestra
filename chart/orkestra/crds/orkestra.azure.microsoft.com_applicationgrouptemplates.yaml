
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: applicationgrouptemplates.orkestra.azure.microsoft.com
spec:
  group: orkestra.azure.microsoft.com
  names:
    kind: ApplicationGroupTemplate
    listKind: ApplicationGroupTemplateList
    plural: applicationgrouptemplates
    singular: applicationgrouptemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApplicationGroupTemplate is the Schema for the applicationgrouptemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationGroupTemplateSpec defines the desired state of ApplicationGroupTemplate
            properties:
              template:
                description: ApplicationGroupTemplateSpec defines the desired state of ApplicationGroupTemplate
                properties:
                  applications:
                    description: Applications that make up the application group
                    items:
                      description: Application spec and dependency on other applications
                      properties:
                        dependencies:
                          description: Dependencies on other applications by name
                          items:
                            type: string
                          type: array
                        name:
                          description: Name of the application
                          type: string
                        spec:
                          description: Spec contains the application spec including the chart info and overlay values
                          properties:
                            chart:
                              description: Chart holds the values needed to pull the chart
                              properties:
                                authSecretRef:
                                  description: AuthSecretRef is a reference to the auth secret to access a private helm repository
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    namespace:
                                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                      type: string
                                    resourceVersion:
                                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                      type: string
                                  type: object
                                name:
                                  description: The name or path the Helm chart is available at in the SourceRef.
                                  type: string
                                url:
                                  description: The Helm repository URL, a valid URL contains at least a protocol and host.
                                  type: string
                                version:
                                  default: '*'
                                  description: Version semver expression, ignored for charts from v1beta1.GitRepository and v1beta1.Bucket sources. Defaults to latest when omitted.
                                  type: string
                              required:
                              - name
                              - url
                              type: object
                            release:
                              description: Release holds the values to apply to the helm release
                              properties:
                                install:
                                  description: Install holds the configuration for Helm install actions for this HelmRelease.
                                  properties:
                                    crds:
                                      description: "CRDs upgrade CRDs from the Helm Chart's crds directory according to the CRD upgrade policy provided here. Valid values are `Skip`, `Create` or `CreateReplace`. Default is `Create` and if omitted CRDs are installed but not updated. \n Skip: do neither install nor replace (update) any CRDs. \n Create: new CRDs are created, existing CRDs are neither updated nor deleted. \n CreateReplace: new CRDs are created, existing CRDs are updated (replaced) but not deleted. \n By default, CRDs are applied (installed) during Helm install action. With this option users can opt-in to CRD replace existing CRDs on Helm install actions, which is not (yet) natively supported by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                                      enum:
                                      - Skip
                                      - Create
                                      - CreateReplace
                                      type: string
                                    createNamespace:
                                      description: CreateNamespace tells the Helm install action to create the HelmReleaseSpec.TargetNamespace if it does not exist yet. On uninstall, the namespace will not be garbage collected.
                                      type: boolean
                                    disableHooks:
                                      description: DisableHooks prevents hooks from running during the Helm install action.
                                      type: boolean
                                    disableOpenAPIValidation:
                                      description: DisableOpenAPIValidation prevents the Helm install action from validating rendered templates against the Kubernetes OpenAPI Schema.
                                      type: boolean
                                    disableWait:
                                      description: DisableWait disables the waiting for resources to be ready after a Helm install has been performed.
                                      type: boolean
                                    disableWaitForJobs:
                                      description: DisableWaitForJobs disables waiting for jobs to complete after a Helm install has been performed.
                                      type: boolean
                                    remediation:
                                      description: Remediation holds the remediation configuration for when the Helm install action for the HelmRelease fails. The default is to not perform any action.
                                      properties:
                                        ignoreTestFailures:
                                          description: IgnoreTestFailures tells the controller to skip remediation when the Helm tests are run after an install action but fail. Defaults to 'Test.IgnoreFailures'.
                                          type: boolean
                                        remediateLastFailure:
                                          description: RemediateLastFailure tells the controller to remediate the last failure, when no retries remain. Defaults to 'false'.
                                          type: boolean
                                        retries:
                                          description: Retries is the number of retries that should be attempted on failures before bailing. Remediation, using an uninstall, is performed between each attempt. Defaults to '0', a negative integer equals to unlimited retries.
                                          type: integer
                                      type: object
                                    replace:
                                      description: Replace tells the Helm install action to re-use the 'ReleaseName', but only if that name is a deleted release which remains in the history.
                                      type: boolean
                                    skipCRDs:
                                      description: "SkipCRDs tells the Helm install action to not install any CRDs. By default, CRDs are installed if not already present. \n Deprecated use CRD policy (`crds`) attribute with value `Skip` instead."
                                      type: boolean
                                    timeout:
                                      description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm install action. Defaults to 'HelmReleaseSpec.Timeout'.
                                      type: string
                                  type: object
                                interval:
                                  default: 5m
                                  description: Interval at which to reconcile the Helm release.
                                  type: string
                                rollback:
                                  description: Rollback holds the configuration for Helm rollback actions for this HelmRelease.
                                  properties:
                                    cleanupOnFail:
                                      description: CleanupOnFail allows deletion of new resources created during the Helm rollback action when it fails.
                                      type: boolean
                                    disableHooks:
                                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                                      type: boolean
                                    disableWait:
                                      description: DisableWait disables the waiting for resources to be ready after a Helm rollback has been performed.
                                      type: boolean
                                    disableWaitForJobs:
                                      description: DisableWaitForJobs disables waiting for jobs to complete after a Helm rollback has been performed.
                                      type: boolean
                                    force:
                                      description: Force forces resource updates through a replacement strategy.
                                      type: boolean
                                    recreate:
                                      description: Recreate performs pod restarts for the resource if applicable.
                                      type: boolean
                                    timeout:
                                      description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm rollback action. Defaults to 'HelmReleaseSpec.Timeout'.
                                      type: string
                                  type: object
                                targetNamespace:
                                  description: TargetNamespace to target when performing operations for the HelmRelease. Defaults to the namespace of the HelmRelease.
                                  maxLength: 63
                                  minLength: 1
                                  type: string
                                timeout:
                                  description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm action. Defaults to '5m0s'.
                                  type: string
                                uninstall:
                                  description: Rollback holds the configuration for Helm uninstall actions for this HelmRelease.
                                  properties:
                                    disableHooks:
                                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                                      type: boolean
                                    keepHistory:
                                      description: KeepHistory tells Helm to remove all associated resources and mark the release as deleted, but retain the release history.
                                      type: boolean
                                    timeout:
                                      description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm uninstall action. Defaults to 'HelmReleaseSpec.Timeout'.
                                      type: string
                                  type: object
                                upgrade:
                                  description: Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.
                                  properties:
                                    cleanupOnFail:
                                      description: CleanupOnFail allows deletion of new resources created during the Helm upgrade action when it fails.
                                      type: boolean
                                    crds:
                                      description: "CRDs upgrade CRDs from the Helm Chart's crds directory according to the CRD upgrade policy provided here. Valid values are `Skip`, `Create` or `CreateReplace`. Default is `Skip` and if omitted CRDs are neither installed nor upgraded. \n Skip: do neither install nor replace (update) any CRDs. \n Create: new CRDs are created, existing CRDs are neither updated nor deleted. \n CreateReplace: new CRDs are created, existing CRDs are updated (replaced) but not deleted. \n By default, CRDs are not applied during Helm upgrade action. With this option users can opt-in to CRD upgrade, which is not (yet) natively supported by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                                      enum:
                                      - Skip
                                      - Create
                                      - CreateReplace
                                      type: string
                                    disableHooks:
                                      description: DisableHooks prevents hooks from running during the Helm upgrade action.
                                      type: boolean
                                    disableOpenAPIValidation:
                                      description: DisableOpenAPIValidation prevents the Helm upgrade action from validating rendered templates against the Kubernetes OpenAPI Schema.
                                      type: boolean
                                    disableWait:
                                      description: DisableWait disables the waiting for resources to be ready after a Helm upgrade has been performed.
                                      type: boolean
                                    disableWaitForJobs:
                                      description: DisableWaitForJobs disables waiting for jobs to complete after a Helm upgrade has been performed.
                                      type: boolean
                                    force:
                                      description: Force forces resource updates through a replacement strategy.
                                      type: boolean
                                    preserveValues:
                                      description: PreserveValues will make Helm reuse the last release's values and merge in overrides from 'Values'. Setting this flag makes the HelmRelease non-declarative.
                                      type: boolean
                                    remediation:
                                      description: Remediation holds the remediation configuration for when the Helm upgrade action for the HelmRelease fails. The default is to not perform any action.
                                      properties:
                                        ignoreTestFailures:
                                          description: IgnoreTestFailures tells the controller to skip remediation when the Helm tests are run after an upgrade action but fail. Defaults to 'Test.IgnoreFailures'.
                                          type: boolean
                                        remediateLastFailure:
                                          description: RemediateLastFailure tells the controller to remediate the last failure, when no retries remain. Defaults to 'false' unless 'Retries' is greater than 0.
                                          type: boolean
                                        retries:
                                          description: Retries is the number of retries that should be attempted on failures before bailing. Remediation, using 'Strategy', is performed between each attempt. Defaults to '0', a negative integer equals to unlimited retries.
                                          type: integer
                                        strategy:
                                          description: Strategy to use for failure remediation. Defaults to 'rollback'.
                                          enum:
                                          - rollback
                                          - uninstall
                                          type: string
                                      type: object
                                    timeout:
                                      description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm upgrade action. Defaults to 'HelmReleaseSpec.Timeout'.
                                      type: string
                                  type: object
                                values:
                                  description: Values holds the values for this Helm release.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            subcharts:
                              description: Subcharts provides the dependency order among the subcharts of the application
                              items:
                                description: DAG contains the dependency information
                                properties:
                                  dependencies:
                                    description: Dependencies on other applications by name
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: Name of the application
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            workflow:
                              description: Workflow provides an option to specify one or more workflow executors to run as a DAG
                              items:
                                properties:
                                  dependencies:
                                    description: Dependencies on other applications by name
                                    items:
                                      type: string
                                    type: array
                                  image:
                                    description: Image allows the end user to specify the docker image name and tag to be executed by the workflow node
                                    type: string
                                  name:
                                    description: Name of the application
                                    type: string
                                  params:
                                    description: Params hold executor specific properties
                                    x-kubernetes-preserve-unknown-fields: true
                                  type:
                                    description: Type specifies the executor type to be run
                                    enum:
                                    - helmrelease
                                    - keptn
                                    - custom
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - chart
                          - release
                          type: object
                      required:
                      - name
                      type: object
                    minItems: 1
                    type: array
                  interval:
                    description: Interval specifies the between reconciliations of the ApplicationGroup Defaults to 5s for short requeue and 30s for long requeue
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
