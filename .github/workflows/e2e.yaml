name: E2E Testing
on: 
  pull_request:
    branches: [main]
  push:
    branches: [main]
jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          cluster_name: orkestra
          config: .kind-cluster.yaml
      - name: Deploy
        run: |
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          sudo apt-get install apt-transport-https --yes
          echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo apt-get update
          sudo apt-get install helm
          kind export kubeconfig --name orkestra
          helm install orkestra chart/orkestra --atomic -n orkestra --create-namespace --values chart/orkestra/values-ci.yaml
      - name: Verify Deployment
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin
          kubectl cluster-info
          echo "current-context:" $(kubectl config current-context)
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1'
      - name: Restore Go cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run test with Coverprofile
        run: |
          make test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt
      
